% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.R
\name{glm_v2}
\alias{glm_v2}
\title{Fits regular and multi-category logistic regression}
\usage{
glm_v2(formula, df, method)
}
\arguments{
\item{formula}{The model formula provided in regression modeling form (e.g. Y ~ X1 + X2).}

\item{df}{The dataframe the method will be applied to.}

\item{method}{The method to be used. This is either logistic regression (method = "lr") or proportional odds logistic regression (method = "polr").}
}
\value{
a list with the following elements:
\itemize{
\item{beta: fixed effects of the covariates (computed for both lr and polr). For polr, we don't obtain an intercept as this is captured in theta.}
\item{theta: theta values compare probabilities between different groups (this is computed only for polr).}
\item{ll: the log-likelihood value (computed for both lr and polr).}
\item{time: the time it takes to fit (computed for both lr and polr).}
}
}
\description{
This glm_v2 function fits a logistic regression model for binary outcomes or a proportional odds cumulative logit model for multi-category outcomes.
}
\examples{
df_heart <- read_csv("data/derived/df_v1.csv")
df_heart <- na.omit(df_heart)

# create binary and multi-category outcomes
df_heart \%<>\% dplyr::select(-...1) \%>\% mutate(y_mult = factor(num),
                                  y_bin = factor(ifelse(num == "0", 0, 1)),
                                  across(c(sex, fbs, slope), as.factor))

#' # fit logistic regression model
formula_bin = y_bin ~ age + fbs + sex + cp + chol + exang + thalach + slope
res_glm_v2 = glm_v2(formula_bin, df = df_heart, method = "lr")

# fit proportional odds cumulative logit model
formula = y_mult ~ age + fbs + sex + cp + chol + exang + thalach + slope
res_polr = glm_v2(formula, df = df_heart, method = "polr")

}
